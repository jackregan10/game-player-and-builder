# MENSAJES DE ERROR Y REGISTRO
temporaryFileDeleteFail=No se pudo eliminar el archivo temporal: {0}
temporaryFileDelete=Archivo temporal eliminado después de la carga.
firebaseAlreadyExists=Firebase ya está inicializado.
relationshipAlreadyExists=La relación ya existe.
invalidTypReference=Construcción TypeReference inválida
cannotFetchSerializedField=No se puede obtener el valor de SerializedField: {0}
unsupportedSerializableField=Tipo @SerializableField no soportado: {0} en {1}#{2}
invalidJson=Nodo JSON inválido para la animación
failedToFetchFollowers=No se pudieron obtener los seguidores del usuario: {0}
unfollow=El seguidor {0} deja de seguir a {1}
noFollow=El seguidor {0} no sigue a {1}
userUnfollowSelf=Los usuarios no pueden seguir/dejar de seguirse a sí mismos.
followerInfo=El seguidor {} sigue a {}
failedToFollow=%s no pudo seguir a %s: %s
failedToUnfollow=%s no pudo dejar de seguir a %s: %s
errorFetchingFollowers=Error al obtener los seguidores: %s
errorGettingFollowings=Error al obtener los seguidos: %s
errorCheckingIfFollows=Error al verificar si %s sigue a %s
noUserInDatabase=Error, no hay usuario en la base de datos
autoLoginStoreFailure=Error al guardar el autologin:
autoLoginError=Error al manejar el autologin: {}
successfulLogout=Cierre de sesión exitoso
successfulLogin=Usuario: {0} ha iniciado sesión correctamente
successfulLoginLog=Sesión iniciada correctamente
failureLoginLog=Error al iniciar sesión
rememberMe=Recordarme
usernameAlreadyExists=El nombre de usuario ya existe
incorrectPassword=La contraseña es incorrecta.
oneOrMoreFieldsMissing=Faltan uno o más campos.
errorSavingUserPhoto=Error al guardar la foto de usuario
errorUploadingProfilePhoto=Error al cargar la nueva foto de perfil
couldNotFetchPlayerList=No se pudo obtener la lista de todos los jugadores.
levelRetrieved=Se recuperaron {0} niveles para el usuario {1}
successfulDeletion=Nivel eliminado exitosamente
levelDoesNotExist=El nivel no existe
levelStorageFailure=Error al guardar el nivel del usuario.
levelUpdateFailure=Error al actualizar el nivel del usuario.
levelSaveError=Error al guardar el nivel: {}
levelDeleteFailureS3=Error al eliminar el nivel del usuario en S3
levelDeleteFailure=Error al eliminar el nivel del usuario
levelRetrievalFailure=Error al recuperar los niveles del usuario
levelAlreadyExists=El nivel ya existe
scoreStorageError=Error al guardar la puntuación
scoreDeleteError=Error al eliminar la puntuación
highScoreDoesNotExist=La puntuación más alta para el usuario %s y el juego %s no existe.
fetchHighScoresError=Error al obtener las puntuaciones más altas
failedToFetch=No se pudo obtener el documento: {0}
missingResolutionBlock=Bloque de resolución faltante o inválido.
missingName=Nombre faltante.
errorCreatingGameScene=La escena con el nombre {0} no se encontró y, por lo tanto, no se agregará al Juego.
gameObjectWithoutTransform=El GameObject {0} no contenía el Componente Transform
noDataFound=No se encontraron datos
noNameFound=No se encontró el nombre
noMatchingComponent=No se encontró el nombre del componente. Lanzando excepción.
errorInstantiatingComponent=Error al instanciar el componente: {0}
errorExtendingComponent=La clase no extiende GameComponent: {0}
nullGameNode=No se pudo escribir el archivo {0}. ¿Está corrupto?
gameFileCreatedInfo=Archivo de juego {0} creado.
errorMappingJson=No se pudo escribir el archivo {0}. Error al mapear a JSON.
noParseFileNotFound=No se pudo analizar el archivo {0}. No se encontró el archivo.
noParseFileCorrupted=No se pudo analizar el archivo {0}. ¿Está corrupto?
errorParsingPrefab=Error al analizar el prefab {0} : {1}
noJsonFoundInDirectory=No se encontraron archivos JSON en el directorio del prefab: {0}
prefabDirectoryError=El directorio del prefab no existe: {0}
deleteRememberMePreferenceInfo=Preferencias de Recordarme eliminadas
databaseOutputError=Error con FileOutputStream
noObjectFound=No se encontró ningún objeto con el nombre: {0}
failedToRetrieveKey=No se pudo recuperar o establecer el valor de la clave: '{0}'
mismatchKeyValue=El valor de la clave '{0}' no es del tipo: {1}
missingKeyException=No se encontró el campo '{0}' en el objeto '{1}'
fieldAccessException=No se puede obtener el valor de {0}
noMatchingGameObject=No se encontró ningún GameObject con el ID: '{0}'
invalidKeyPath=Formato de ruta de clave inválido: '{0}'. Formato esperado: 'objectId.fieldName'
noValueInScriptable=No se encontró ningún valor en ScriptableDataStore para la clave: '{0}'
expectedNumericValue=Se esperaba un valor numérico pero se obtuvo {0}
divisionByZeroError=División por cero en la operación DIV
nullFollowObject=El objeto de seguimiento es nulo
cameraMustHaveTransformInfo=La cámara debe tener un componente Transform
animationNotFound=No se encontró la animación {0}.
missingParentScene=El GameObject no tiene una escena principal
objectCopyError="No se puede copiar el objeto"
cannotRemoveTransformInfo=No se puede eliminar el componente Transform
addComponentFailure=No se pudo agregar el componente {0}
componentAlreadyExistsInfo=El componente ya existe
noSuchComponentParent={0} no tiene padre
failedObjectCopy=No se puede copiar el objeto
resetSceneInfo=Escena {0} restablecida correctamente
resetSceneError=No se encontró el JSON original para la escena {0}
prefabSceneAlreadyExists=La escena del prefab ya existe: {0}
sceneAlreadyExists=La escena con ID {0} ya existe.
databaseError=Error de la base de datos.
noGameScene=Aún no se ha cargado ninguna escena de juego.
keyIncompatibleType=La clave no coincide con el tipo esperado.
languageFileNotFound=No se encontró el archivo de idioma para {0}. Cambiando al predeterminado.
errorHashingPassword=Error al codificar la contraseña
errorHashingPasswordWithMessage=Error al codificar la contraseña: {}
userAlreadyExistsWithMessage=El usuario ya existe en la base de datos: {}
errorParsingGame=Error al analizar el archivo JSON del juego: {0}
errorSavingGame=Error al guardar el juego en JSON: {0}
noSuchGameToSave=No hay ningún juego cargado para guardar.
followerInformationError=No se pudo determinar si {0} sigue a {1}
fileSaveError=Error al guardar el archivo: {0}
levelPlayingError=Error al obtener los niveles del usuario: {0}
levelDeleteError=No se pudo eliminar el nivel: {0}
buttonError=Error al crear los botones: {0}
invalidProfileUpdate=La información actualizada al perfil no es válida.
noCamera=No se encontró ninguna cámara
duplicateGameObject=Ya existe un GameObject con el nombre {0}
playerExistsError=El jugador {0} ya existe
createPlayerMessage=Jugador {0} creado
playerNotExistError=El jugador {0} no existe en la colección {1}
deletePlayerSuccess=Jugador {0} eliminado exitosamente
existingScoreMessage=La puntuación existente {0} para {1} en {2} es mayor o igual a la nueva puntuación {3}
saveUpdateScoreMessage=Se guardó o actualizó la nueva puntuación más alta {0} para {1} en {2}
scoreNotExistError=La puntuación {0} no existe en la colección {1}
databaseAddError=Error al agregar el documento: {0}
databaseDeleteError=Error al eliminar el documento: {0}
databaseUpdateError=Error al actualizar el documento: {0}
errorAddNewViewScene=Error al instanciar la escena de vista: {0}.
noSuchScene=No se ha cargado ninguna escena de juego. Omitiendo paso.
noTransformWithCamera=No se encontró la transformación de la cámara
noSuchRenderMethod=No existe tal método de renderizado de componente: {0}
failToRenderImage=Error al renderizar la imagen: {0}
invalidRenderContext=El contexto de renderizado proporcionado no era de un tipo válido.
notDeclaredRequiredComponents=El tipo de componente {0} no está declarado en la lista de componentes requeridos.
noRenderContext=No se ha establecido ningún contexto de renderizado; use setRenderContext() para establecerlo.
noSuchPlayer=No hay ningún usuario actual.
errorDeterminingFollower=Error al determinar si {} sigue a {}
errorFindingGenericType=No se pudo determinar el tipo genérico para {0}
errorIllegalDeserializedInput=La entrada {0} no es válida para la deserialización.
errorSerializing=Error en el proceso de serialización: {0}
noSuchUser=No se pudo encontrar al usuario conectado
errorDeserializing=Error en el proceso de deserialización: {0}
noFollowerList=No se pudo encontrar la lista de seguidores para el usuario {}
errorCreateSerializer=No se pudo determinar el tipo genérico para Serializer en {0}
errorCreateDeserializedUI=No se pudo determinar el tipo genérico para DeserializedFieldUI en {0}
errorCreateRenderer=No se pudo determinar el tipo genérico para ComponentRenderer en {0}
noGameFileSelected=No se seleccionó ningún archivo de juego. {0}
stylesheetNotFound=No se encontró el archivo de hoja de estilo para '{}'. Cambiando al predeterminado.
couldNotLoadFallback=No se pudo cargar la hoja de estilo de respaldo: {}
errorLoadingPreviewImage=Error al cargar la imagen de vista previa desde: {}
prefabHasNoSpriteRenderer=El prefab '{}' no tiene un componente SpriteRenderer, usando imagen de marcador de posición.
prefabHasBadImagePath=El prefab '{}' tiene una ruta de imagen vacía o nula en SpriteRenderer, usando imagen de marcador de posición.
missingUsernameOrPassword=Falta el nombre de usuario o la contraseña
autologinSetupError=Error al configurar el autologin:
couldNotFetchFollowerFollowing=No se pudieron obtener los seguidores/seguidos de la base de datos.
error=Error
anErrorOccurred=Ocurrió un error.
illegalArgumentException=Excepción de argumento ilegal: {}

# TEXTO GENÉRICO
addText=+
minusText=-
ellipsesText=...

# ENTRADA DE CAMPO DESERIALIZADO
enterDoublePrompt=Ingrese un valor doble
selectPrompt=Seleccionar...
paramPrompt=parámetro...
newBehavior=Nuevo Comportamiento

# VISTA
windowWidth=1280
windowHeight=720

# GESTOR DE LA VISTA PRINCIPAL
defaultScene=MainMenuScene

## ESCENAS
returnButton=Regresar
pauseButton=Pausa
resumeButton=Reanudar

# CONSTRUCTOR
prefabTitle=Prefabs
sceneTitle=Escenas
viewTitle=Vista
objectTitle=Objetos
componentTitle=Componentes
saveLocalButton=Guardar Localmente
saveProfileButton=Guardar en Perfil
mainMenuButton=Menú Principal
previewButton=Vista Previa del Nivel
levelName=Nombre del Nivel
levelDescription=Descripción del Nivel
nameField=Ingrese el Nombre:
descriptionField=Ingrese la Descripción:
saveTitle=Guardar Nivel
headerText=Ingrese el Nombre y la Descripción del Nivel
updateButton=Actualizar Nivel

addComponentButton=Agregar Componente
addGameObject=Agregar GameObject
prefabNote= (prefab)
addScene=Agregar Escena

levelSavedAndUploaded=Nivel guardado y cargado exitosamente.
failedToSaveOrUploadLevel=Error al guardar o cargar el nivel: %s
saveGameFile=Guardar Archivo de Juego
confirmExit=Confirmar Salida
unsavedChangesMayBeLost=¡Los cambios no guardados podrían perderse!
areYouSureQuit=¿Seguro que quieres salir?
confirmedExit=El usuario confirmó la salida.
canceledExit=El usuario canceló la salida.
notLoggedIn=Usuario no conectado.

# ETIQUETAS DE INFORMACIÓN SOBRE EL HOVER
nameLabel=Nombre:
typeLabel=Tipo:
descriptionLabel=Descripción:

# DESCRIPCIONES DE LOS COMPONENTES
AnimationControllerDescription=Gestiona la animación de un GameObject, incluyendo la lista de nombres de animación,\n la animación actual y el tiempo para cambiar entre animaciones.
BehaviorControllerDescription=Gestiona los comportamientos de un objeto de juego. Es\n responsable de ejecutar los comportamientos y gestionar las restricciones y acciones asociadas con\n cada comportamiento.
CameraDescription=Se utiliza para representar una cámara en el juego. Es responsable de\n determinar qué objetos están a la vista.
ColliderDescription=Un componente de física responsable de detectar colisiones y ejecutar comportamientos basados en el tipo de objeto.\n Sus principales responsabilidades son calcular con qué otros objetos está colisionando actualmente el padre (collidedColliders) basándose en un grupo preestablecido de objetos (collidableTags),\n resolver colisiones con objetos no permeables y proporcionar funciones de ayuda relacionadas con\n colisiones específicas (isTouchingFromAbove, horizontallyAligned, etc.)
FollowerDescription=La clase FollowBehavior se utiliza para hacer que un objeto de juego siga a otro objeto de juego con un\n desplazamiento especificado.
InputHandlerDescription=Maneja la entrada de teclado sin procesar con códigos de tecla personalizados.
PhysicsHandlerDescription=Maneja la física de un objeto de juego, incluyendo masa, velocidad y aceleración.
SpriteRendererDescription=Un componente visual que representa una imagen para ser renderizada en una posición específica. Este componente\n almacena la ruta de la imagen y sus coordenadas de renderizado deseadas (x, y).
TextRendererDescription=Un componente que renderiza texto en pantalla como parte de un GameObject. Este componente utiliza JavaFX\n para el estilo y la captura para dibujar texto con estilo en el lienzo. Ejemplos de uso: - Mensajes de fin de juego -\n Elementos HUD como puntuaciones o instrucciones - Etiquetas de botones o mensajes estáticos en pantalla
TransformDescription=Un componente que define las propiedades espaciales y visuales de un GameObject, incluyendo posición,\n escala, rotación y ruta de la imagen.\n\n Este es típicamente el componente fundamental para renderizar y posicionar entidades del juego dentro\n de la escena.

# DESCRIPCIONES DE LAS ACCIONES
ChangeGameSceneActionDescription=Cambia la GameScene actual dentro del Juego. - Si el parámetro == -2, va al último nivel - Si\n el parámetro == -1, va al siguiente nivel - Si el parámetro >= 0, va al nivel en ese índice
ChangeViewSceneActionDescription=ChangeViewSceneAction es una clase que extiende BehaviorAction y se utiliza para cambiar la escena.
DeleteObjectActionDescription=La clase SpawnObjectAction es una acción de comportamiento que genera un nuevo objeto en la escena.\n Toma el nombre del objeto a generar como parámetro.
LaunchAnimationActionDescription=La clase LaunchAnimationAction es una acción de comportamiento que lanza una animación en el objeto padre.\n Toma el nombre de la animación a lanzar como parámetro.
MoveSceneToStoreActionDescription=Acción para mover una escena a la tienda.
MoveStoreToSceneActionDescription=Acción para mover una tienda a la escena.
PushActionDescription=La clase PushAction es una acción de comportamiento que empuja un objeto de juego en la dirección de la\n velocidad del objeto padre. Se utiliza para mover objetos en el mundo del juego.
PushActionXDescription=La clase PushActionX es una acción de comportamiento que empuja un objeto de juego en la dirección X basándose en\n la velocidad del objeto padre. Se utiliza para mover objetos en el mundo del juego a lo largo del eje X.
PushActionYDescription=La clase PushActionY es una acción de comportamiento que empuja un objeto de juego en la dirección Y basándose en\n la velocidad del objeto padre. Se utiliza para mover objetos en el mundo del juego a lo largo del eje Y.
RotationSetActionDescription=La clase RotationSetAction es una acción que establece la rotación de un componente Transform.
ScaleXSetActionDescription=ScaleXSetAction es una clase que extiende SetComponentValueAction y se utiliza para establecer la escala X del\n objeto.
ScaleYSetActionDescription=ScaleYSetAction es una clase que extiende SetComponentValueAction y se utiliza para establecer la escala Y del\n objeto.
SetCameraFocusActionDescription=La clase SetCameraFocusAction es una acción de comportamiento que establece el foco de la cámara en un objeto específico.\n Toma el nombre del objeto en el que enfocar como parámetro.
SetComponentValueActionDescription=SetComponentValueAction es una clase abstracta que extiende BehaviorAction y se utiliza para establecer un\n valor de un componente.
SetPositionXActionDescription=SetPositionXAction es una clase que extiende SetComponentValueAction y se utiliza para establecer la posición X\n del objeto.
SetPositionYActionDescription=SetPositionYAction es una clase que extiende SetComponentValueAction y se utiliza para establecer la posición Y\n del objeto.
SetTextActionDescription=SetTextAction genérica que acepta cualquier tipo de entrada y la convierte en una cadena.
SetTextFromDataStoreActionDescription=Una acción que establece el texto de un componente {@link TextRenderer} basado en un valor\nrecuperado del {@link ScriptableDataStore}.\n\nEsta acción espera que su parámetro de entrada sea una ruta de clave {@code String} (p. ej., "player.score")\nutilizada para obtener un valor en vivo del almacén de datos durante la ejecución. El {@link TextRenderer} mantendrá su\n texto inicial como prefijo y luego se adjuntará el valor obtenido\n\nLa etiqueta /save garantizará que el valor se guarde en el almacenamiento a largo plazo en el {@link ScriptableDataStore}\ny si las escenas futuras también tienen la etiqueta /save, entonces obtendrán y agregarán ese valor guardado. Opcionalmente\nel usuario puede incluir un alias para el guardado (ej. /save,score), lo que resultará en que el valor se guarde\ny
SpawnObjectActionDescription=La clase SpawnObjectAction es una acción de comportamiento que genera un nuevo objeto predefinido en la escena.\n Requiere como parámetro el nombre del objeto dentro de la escena Prefab que se debe generar.
SpawnObjectFromCameraActionDescription=La clase SpawnObjectFromCameraAction es una acción de comportamiento que genera un nuevo objeto predefinido en la escena.\n\n Requiere como parámetro el nombre del objeto dentro de la escena Prefab que se debe generar.\n\n Genera el objeto en la posición de la cámara más la transformación del objeto.
SpawnObjectGeneralActionDescription=Superclase general para la generación de objetos. Permite personalizar el lugar desde donde se genera el objeto.
SwapActionDescription=SwapAction es una clase que extiende BehaviorAction y se utiliza para intercambiar la posición del objeto principal\n\n con el objeto almacenado en memoria.
VelocityXSetActionDescription=VelocityXSetAction es una clase que extiende SetComponentValueAction y se utiliza para establecer la velocidad en X\n\n del objeto.
VelocityYSetActionDescription=VelocityYSetAction es una clase que extiende SetComponentValueAction y se utiliza para establecer la velocidad en Y\n\n del objeto.

# DESCRIPCIONES DE RESTRICCIONES
CollidesWithConstraintDescription=Esta clase define una restricción que verifica si el componente Collider de un GameObject colisiona\n\n con otro GameObject que tiene un componente Collider con una etiqueta específica. Extiende la clase BehaviorConstraint y usa una cadena para indicar la etiqueta objetivo.
HasCurrentAnimationConstraintDescription=hasCurrentAnimation es una clase que extiende BehaviorConstraint y se utiliza para verificar si\n\n la animación actual de una entidad coincide con un parámetro dado.
KeyHoldConstraintDescription=KeyHoldConstraint es una clase que extiende BehaviorConstraint y se utiliza para verificar si una tecla\n\n se mantiene presionada.
KeyNotPressConstraintDescription=KeyNotPressConstraint es una clase que extiende BehaviorConstraint y se utiliza para verificar si una tecla\n\n nunca se presiona.
KeyPressConstraintDescription=KeyPressConstraint es una clase que extiende BehaviorConstraint y se utiliza para verificar si una tecla\n\n se presiona alguna vez.
KeyReleaseConstraintDescription=KeyReleaseConstraint es una clase que extiende BehaviorConstraint y se utiliza para verificar si una tecla\n\n se libera alguna vez.
MouseClickConstraintDescription=Restricción que se cumple cuando el InputHandler del objeto registra un clic de ratón en este fotograma.
MovementConstraintDescription=Restricción para una acción que toma como parámetro el nombre de un objeto y verifica\n\n si ese objeto se ha movido.
PassConstraintDescription=Verifica si un objeto ha pasado a otro objeto.
PassXConstraintDescription=PassXConstraint es una clase que extiende PassConstraint y se utiliza para verificar si el objeto principal\n\n ha pasado a otro objeto en dirección X.
PassYConstraintDescription=PassYConstraint es una clase que extiende PassConstraint y se utiliza para verificar si el objeto principal\n\n ha pasado a otro objeto en dirección Y.
TouchingFromAboveConstraintDescription=Esta clase define una restricción que verifica si el componente Collider de un GameObject\n\n toca el componente Collider de otro GameObject desde arriba, dentro de una tolerancia específica. Extiende la clase BehaviorConstraint y usa una cadena para indicar la etiqueta objetivo.
TouchingFromDirectionConstraintDescription=Restricción abstracta generalizada para verificar si un Collider toca a otro Collider\n\n desde una dirección específica definida por las subclases.
TouchingFromSideConstraintDescription=Esta clase define una restricción que verifica si el componente Collider de un GameObject\n\n toca el componente Collider de otro GameObject desde un lado, dentro de una tolerancia específica. Extiende la clase BehaviorConstraint y usa una cadena para indicar la etiqueta objetivo.
TouchingFromTopBottomConstraintDescription=Esta clase define una restricción que verifica si el componente Collider de un GameObject\n\n toca el componente Collider de otro GameObject desde arriba o desde abajo, dentro de una tolerancia específica. Extiende la clase BehaviorConstraint y usa una cadena para indicar la etiqueta objetivo.

# MENÚ PRINCIPAL
mainMenuTitle=PLATAFORMERO
playButton=JUGAR
buildButton=ENTORNO DE DESARROLLO
socialHubButton=CENTRO SOCIAL
gameSelector=DINO,GEOMETRY DASH
gameSelectorInitialValue=SELECCIONAR JUEGO
languageSelectorInitialValue=SELECCIONAR IDIOMA
languageSelector=ENGLISH,SPANISH,GERMAN
themeSelector=DARK,LIGHT,FREAKY,CLASSY,FAIL
themeSelectorInitialValue=SELECCIONAR TEMA
logOutButton=CERRAR SESIÓN
builderFileSelection=¡Seleccione un archivo JSON!
jsonFileDirectory=data/GameJsons

# ESCENA DEL MENÚ DEL JUEGO
dinoGameButtonImageFile=oogasalad/dinosaur/DinoRun1.png
geoDashButtonImageFile=oogasalad/geodash/player.png
doodleJumpButtonImageFile=oogasalad/doodle/sprite.png

# PANTALLA DE INICIO DEL CENTRO SOCIAL
socialWelcomeMessage=BIENVENIDO A PLATAFORMERO
socialEmailPrompt=Correo electrónico
socialPasswordPrompt=Contraseña
socialLoginButton=Iniciar sesión
logInText=Iniciar sesión
socialSignUpButton=Registrarse
showPassText=Mostrar
hidePassText=Ocultar
socialBioField=Biografía
paused=En pausa
gameLabel=Juego: %s
authorLabel=Autor: %s

# ESCENA DE REGISTRO DEL CENTRO SOCIAL
uploadFileTitle=Seleccionar archivo
signUpLabel=REGISTRARSE
signUpPrompt=Complete los siguientes campos para crear una cuenta
signUpFirstNameField=Nombre
signUpLastNameField=Apellido
uploadFileButton=Subir nueva foto

# ESCENA DE BIENVENIDA DEL CENTRO SOCIAL
avatarFetchFail=No se pudo obtener la URL del avatar del jugador.
socialHubTitle=CENTRO SOCIAL
socialHubSubtitle=Jugar. Crear. Competir.
profileButton=Perfil
leaderboardButton=Tabla de posiciones
leaderboardTitle=Tabla de posiciones
scoreTitleDisplay=PUNTUACIÓN: {0}
searchForUserTitle=Buscar usuario
loadScoresFail=No se pudieron cargar las puntuaciones.
loadLeaderboard=¿Cargar tabla de posiciones?
profileSearchButton=Buscar perfil

# ESCENA DE PERFIL DEL CENTRO SOCIAL
profileUsername=Nombre de usuario: {0}
downloadSelectionInitialValue=Guardar nivel como
profileDateJoined=Fecha de ingreso: {0}
editProfileButton=Editar
noBioText=Sin biografía
username=Nombre de usuario: {0}
levelTitle=Niveles creados:
levelPlayButton=Jugar
levelEditButton=Editar
levelDownloadButton=Descargar
levelDeleteButton=Eliminar

# ESCENA DE SEGUIDORES
followTitle=Seguir

# ESCENA DE EDITAR PERFIL DEL CENTRO SOCIAL
profilePhoto=Foto de perfil:
profilePhotoUploadButton=Subir nueva foto
selectedPhotoLabelEmpty=Ningún archivo seleccionado
selectedPhotoLabel=Seleccionado: {0}
selectedPhotoSpacing=10
profileFullName=Nombre completo del perfil:
profileBio=Biografía:
profileBioLineCount=3
profileUsernameLabel=Nombre de usuario:
profileEditSaveButton=Guardar cambios
followButton=Seguir
unfollowButton=Dejar de seguir
profileUpdated=Perfil actualizado

# ESCENA DE SEGUIDORES DEL CENTRO SOCIAL
followerLabel=Seguidores: {0}
followingLabel=Siguiendo: {0}
followerButton=Seguidores
followingButton=Siguiendo

# PÁGINA DE BÚSQUEDA DE USUARIOS
profileSearch=Buscar perfil

# GUI
framesPerSecond=60

# PANTALLA DE VICTORIA
score=Puntuación


# TESTING
testNumber=123.45
testList=item1,item2,item3
testKey=This is a test message.
testKeyArgument=This is a test message with argument: {0}
testNumberFail=This is not a number type
keyNotFound=Key does not exist for {0}. Returning key.